// -*- mode: groovy -*-

// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.
//
// Jenkins pipeline
// See documents at https://jenkins.io/doc/book/pipeline/jenkinsfile/

// timeout in minutes
max_time = 120

node {
  // Loading the utilities requires a node context unfortunately
  checkout scm
  utils = load('ci/jenkins/utils.groovy')
  build_steps = load('ci/jenkins/build_steps.groovy')
}
utils.assign_node_labels(linux_gpu: 'linux-gpu', linux_cpu: 'linux-cpu')

utils.main_wrapper(
core_logic: {
  utils.parallel_stage('Sanity', [
    build_steps.sanity_lint('gluon-nlp-gpu-py3-master', 'gpu/py3-master', 'src/gluonnlp')
  ])

  utils.parallel_stage('Tests', [
    build_steps.test_unittest('gluon-nlp-gpu-py3-master', 'gpu/py3-master',
                              'tests/unittest', 'src/gluonnlp',
                              'gpu and (not (serial or skip_master))',
                              4, true, false),
    build_steps.test_unittest('gluon-nlp-gpu-py3-master', 'gpu/py3-master',
                              'tests/unittest', 'src/gluonnlp',
                              'gpu and serial and not skip_master',
                              0, true, false),
    build_steps.test_unittest('gluon-nlp-gpu-py3-master', 'gpu/py3-master',
                              'scripts/tests', 'src/gluonnlp',
                              'gpu and (not (serial or skip_master or integration))',
                              4, true, false),
    build_steps.test_unittest('gluon-nlp-gpu-py3-master', 'gpu/py3-master',
                              'scripts/tests', 'src/gluonnlp',
                              'gpu and serial and not (skip_master or integration)',
                              0, true, false)
  ])
}
,
failure_handler: {}
)
