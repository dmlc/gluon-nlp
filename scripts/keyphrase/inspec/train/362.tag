on	NO_KP
batch-constructing	NO_KP
b/sup	NO_KP
+/-trees:	NO_KP
algorithm	BEGIN_KP
and	NO_KP
its	NO_KP
performance	BEGIN_KP
evaluation	INSIDE_KP
efficient	NO_KP
construction	BEGIN_KP
of	NO_KP
indexes	NO_KP
is	NO_KP
very	NO_KP
important	NO_KP
in	NO_KP
bulk-loading	NO_KP
a	NO_KP
database	BEGIN_KP
or	NO_KP
adding	NO_KP
a	NO_KP
new	NO_KP
index	BEGIN_KP
to	NO_KP
an	NO_KP
existing	NO_KP
database	BEGIN_KP
since	NO_KP
both	NO_KP
of	NO_KP
them	NO_KP
should	NO_KP
handle	NO_KP
an	NO_KP
enormous	NO_KP
volume	NO_KP
of	NO_KP
data.	NO_KP
in	NO_KP
this	NO_KP
paper,	NO_KP
we	NO_KP
propose	NO_KP
an	NO_KP
algorithm	BEGIN_KP
for	NO_KP
batch-constructing	NO_KP
the	NO_KP
b/sup	NO_KP
+/-tree,	NO_KP
the	NO_KP
most	NO_KP
widely	NO_KP
used	NO_KP
index	BEGIN_KP
structure	INSIDE_KP
in	NO_KP
database	BEGIN_KP
systems.	NO_KP
the	NO_KP
main	NO_KP
characteristic	NO_KP
of	NO_KP
our	NO_KP
algorithm	BEGIN_KP
is	NO_KP
to	NO_KP
simultaneously	NO_KP
process	BEGIN_KP
all	NO_KP
the	NO_KP
key	NO_KP
values	NO_KP
to	NO_KP
be	NO_KP
placed	NO_KP
on	NO_KP
each	NO_KP
b+-tree	BEGIN_KP
page	INSIDE_KP
when	NO_KP
accessing	NO_KP
the	NO_KP
page.	NO_KP
this	NO_KP
avoids	NO_KP
the	NO_KP
overhead	NO_KP
due	NO_KP
to	NO_KP
accessing	NO_KP
the	NO_KP
same	NO_KP
page	BEGIN_KP
multiple	NO_KP
times,	NO_KP
which	NO_KP
results	NO_KP
from	NO_KP
applying	NO_KP
the	NO_KP
b+-tree	BEGIN_KP
insertion	INSIDE_KP
algorithm	INSIDE_KP
repeatedly.	NO_KP
for	NO_KP
performance	BEGIN_KP
evaluation,	NO_KP
we	NO_KP
have	NO_KP
analyzed	NO_KP
our	NO_KP
algorithm	BEGIN_KP
in	NO_KP
terms	NO_KP
of	NO_KP
the	NO_KP
number	NO_KP
of	NO_KP
disk	BEGIN_KP
accesses.	NO_KP
the	NO_KP
results	NO_KP
show	NO_KP
that	NO_KP
the	NO_KP
number	NO_KP
of	NO_KP
disk	BEGIN_KP
accesses	INSIDE_KP
excluding	NO_KP
those	NO_KP
in	NO_KP
the	NO_KP
relocation	BEGIN_KP
process	INSIDE_KP
is	NO_KP
identical	NO_KP
to	NO_KP
the	NO_KP
number	NO_KP
of	NO_KP
pages	NO_KP
belonging	NO_KP
to	NO_KP
the	NO_KP
b/sup	NO_KP
+/-tree.	NO_KP
considering	NO_KP
that	NO_KP
the	NO_KP
relocation	BEGIN_KP
process	INSIDE_KP
is	NO_KP
an	NO_KP
unavoidable	NO_KP
preprocessing	NO_KP
step	NO_KP
for	NO_KP
batch-constructing	NO_KP
of	NO_KP
b/sup	NO_KP
+/-trees,	NO_KP
our	NO_KP
algorithm	BEGIN_KP
requires	NO_KP
just	NO_KP
one	NO_KP
disk	BEGIN_KP
access	INSIDE_KP
per	NO_KP
b+-tree	BEGIN_KP
page,	NO_KP
and	NO_KP
therefore	NO_KP
turns	NO_KP
out	NO_KP
to	NO_KP
be	NO_KP
optimal.	NO_KP
we	NO_KP
also	NO_KP
present	NO_KP
the	NO_KP
performance	BEGIN_KP
tendency	NO_KP
in	NO_KP
relation	NO_KP
with	NO_KP
different	NO_KP
parameter	NO_KP
values	NO_KP
via	NO_KP
simulation.	NO_KP
finally,	NO_KP
we	NO_KP
show	NO_KP
the	NO_KP
performance	BEGIN_KP
enhancement	NO_KP
effect	NO_KP
of	NO_KP
our	NO_KP
algorithm,	NO_KP
compared	NO_KP
with	NO_KP
the	NO_KP
one	NO_KP
using	NO_KP
repeated	NO_KP
insertions	NO_KP
through	NO_KP
experiments	NO_KP
