achieving	NO_KP
performance	NO_KP
under	NO_KP
openmp	BEGIN_KP
on	NO_KP
ccnuma	NO_KP
and	NO_KP
software	NO_KP
distributed	NO_KP
shared	BEGIN_KP
memory	INSIDE_KP
systems	INSIDE_KP
openmp	INSIDE_KP
is	NO_KP
emerging	NO_KP
as	NO_KP
a	NO_KP
viable	NO_KP
high-level	NO_KP
programming	BEGIN_KP
model	INSIDE_KP
for	NO_KP
shared	BEGIN_KP
memory	INSIDE_KP
parallel	INSIDE_KP
systems.	NO_KP
it	NO_KP
was	NO_KP
conceived	NO_KP
to	NO_KP
enable	NO_KP
easy,	NO_KP
portable	NO_KP
application	NO_KP
development	NO_KP
on	NO_KP
this	NO_KP
range	NO_KP
of	NO_KP
systems,	NO_KP
and	NO_KP
it	NO_KP
has	NO_KP
also	NO_KP
been	NO_KP
implemented	NO_KP
on	NO_KP
cache-coherent	BEGIN_KP
non-uniform	INSIDE_KP
memory	INSIDE_KP
access	INSIDE_KP
(ccnuma)	NO_KP
architectures.	NO_KP
unfortunately,	NO_KP
it	NO_KP
is	NO_KP
hard	NO_KP
to	NO_KP
obtain	NO_KP
high	NO_KP
performance	NO_KP
on	NO_KP
the	NO_KP
latter	NO_KP
architecture,	NO_KP
particularly	NO_KP
when	NO_KP
large	NO_KP
numbers	NO_KP
of	NO_KP
threads	NO_KP
are	NO_KP
involved.	NO_KP
in	NO_KP
this	NO_KP
paper,	NO_KP
we	NO_KP
discuss	NO_KP
the	NO_KP
difficulties	NO_KP
faced	NO_KP
when	NO_KP
writing	NO_KP
openmp	BEGIN_KP
programs	NO_KP
for	NO_KP
ccnuma	NO_KP
systems,	NO_KP
and	NO_KP
explain	NO_KP
how	NO_KP
the	NO_KP
vendors	NO_KP
have	NO_KP
attempted	NO_KP
to	NO_KP
overcome	NO_KP
them.	NO_KP
we	NO_KP
focus	NO_KP
on	NO_KP
one	NO_KP
such	NO_KP
system,	NO_KP
the	NO_KP
sgi	NO_KP
origin	NO_KP
2000,	NO_KP
and	NO_KP
perform	NO_KP
a	NO_KP
variety	NO_KP
of	NO_KP
experiments	NO_KP
designed	NO_KP
to	NO_KP
illustrate	NO_KP
the	NO_KP
impact	NO_KP
of	NO_KP
the	NO_KP
vendor's	NO_KP
efforts.	NO_KP
we	NO_KP
compare	NO_KP
codes	NO_KP
written	NO_KP
in	NO_KP
a	NO_KP
standard,	NO_KP
loop-level	NO_KP
parallel	BEGIN_KP
style	NO_KP
under	NO_KP
openmp	BEGIN_KP
with	NO_KP
alternative	NO_KP
versions	NO_KP
written	NO_KP
in	NO_KP
a	NO_KP
single	BEGIN_KP
program	INSIDE_KP
multiple	INSIDE_KP
data	INSIDE_KP
(spmd)	NO_KP
fashion,	NO_KP
also	NO_KP
realized	NO_KP
via	NO_KP
openmp,	NO_KP
and	NO_KP
show	NO_KP
that	NO_KP
the	NO_KP
latter	NO_KP
consistently	NO_KP
provides	NO_KP
superior	NO_KP
performance.	NO_KP
a	NO_KP
carefully	NO_KP
chosen	NO_KP
set	NO_KP
of	NO_KP
language	NO_KP
extensions	NO_KP
can	NO_KP
help	NO_KP
us	NO_KP
translate	NO_KP
programs	NO_KP
from	NO_KP
the	NO_KP
former	NO_KP
style	NO_KP
to	NO_KP
the	NO_KP
latter	NO_KP
(or	NO_KP
to	NO_KP
compile	NO_KP
directly,	NO_KP
but	NO_KP
in	NO_KP
a	NO_KP
similar	NO_KP
manner).	NO_KP
syntax	NO_KP
for	NO_KP
these	NO_KP
extensions	NO_KP
can	NO_KP
be	NO_KP
borrowed	NO_KP
from	NO_KP
hpf,	NO_KP
and	NO_KP
some	NO_KP
aspects	NO_KP
of	NO_KP
hpf	BEGIN_KP
compiler	NO_KP
technology	NO_KP
can	NO_KP
help	NO_KP
the	NO_KP
translation	NO_KP
process.	NO_KP
it	NO_KP
is	NO_KP
our	NO_KP
expectation	NO_KP
that	NO_KP
an	NO_KP
extended	NO_KP
language,	NO_KP
if	NO_KP
well	NO_KP
compiled,	NO_KP
would	NO_KP
improve	NO_KP
the	NO_KP
attractiveness	NO_KP
of	NO_KP
openmp	BEGIN_KP
as	NO_KP
a	NO_KP
language	NO_KP
for	NO_KP
high-performance	NO_KP
computation	NO_KP
on	NO_KP
an	NO_KP
important	NO_KP
class	NO_KP
of	NO_KP
modern	NO_KP
architectures	NO_KP
