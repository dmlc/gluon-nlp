extending	NO_KP
ctl	NO_KP
with	NO_KP
actions	BEGIN_KP
and	NO_KP
real	BEGIN_KP
time	INSIDE_KP
in	NO_KP
this	NO_KP
paper,	NO_KP
we	NO_KP
present	NO_KP
the	NO_KP
logic	BEGIN_KP
atctl,	NO_KP
which	NO_KP
is	NO_KP
intended	NO_KP
to	NO_KP
be	NO_KP
used	NO_KP
for	NO_KP
model	BEGIN_KP
checking	INSIDE_KP
models	INSIDE_KP
that	NO_KP
have	NO_KP
been	NO_KP
specified	NO_KP
in	NO_KP
a	NO_KP
lightweight	NO_KP
version	NO_KP
of	NO_KP
the	NO_KP
unified	BEGIN_KP
modelling	INSIDE_KP
language	INSIDE_KP
(uml).	NO_KP
elsewhere,	NO_KP
we	NO_KP
have	NO_KP
defined	NO_KP
a	NO_KP
formal	BEGIN_KP
semantics	INSIDE_KP
for	NO_KP
luml	NO_KP
to	NO_KP
describe	NO_KP
the	NO_KP
models.	NO_KP
this	NO_KP
paper's	NO_KP
goal	NO_KP
is	NO_KP
to	NO_KP
give	NO_KP
a	NO_KP
specification	BEGIN_KP
language	INSIDE_KP
for	NO_KP
properties	NO_KP
that	NO_KP
fits	NO_KP
luml;	NO_KP
luml	NO_KP
includes	NO_KP
states,	NO_KP
actions	BEGIN_KP
and	NO_KP
real	BEGIN_KP
time.	NO_KP
atctl	BEGIN_KP
extends	NO_KP
ctl	NO_KP
with	NO_KP
concurrent	NO_KP
actions	BEGIN_KP
and	NO_KP
real	BEGIN_KP
time.	NO_KP
it	NO_KP
is	NO_KP
based	NO_KP
on	NO_KP
earlier	NO_KP
extensions	NO_KP
of	NO_KP
ctl	NO_KP
by	NO_KP
r.	NO_KP
de	NO_KP
nicola	NO_KP
and	NO_KP
f.	NO_KP
vaandrager	NO_KP
(actl)	NO_KP
(1990)	NO_KP
and	NO_KP
r.	NO_KP
alur	NO_KP
et	NO_KP
al	NO_KP
(tctl)	NO_KP
(1993).	NO_KP
this	NO_KP
makes	NO_KP
it	NO_KP
easier	NO_KP
to	NO_KP
adapt	NO_KP
existing	NO_KP
model	BEGIN_KP
checkers	NO_KP
to	NO_KP
atctl.	NO_KP
to	NO_KP
show	NO_KP
that	NO_KP
we	NO_KP
can	NO_KP
check	NO_KP
properties	NO_KP
specified	NO_KP
in	NO_KP
atctl	BEGIN_KP
in	NO_KP
models	BEGIN_KP
specified	NO_KP
in	NO_KP
luml,	NO_KP
we	NO_KP
give	NO_KP
a	NO_KP
small	NO_KP
example	NO_KP
using	NO_KP
the	NO_KP
kronos	BEGIN_KP
model	INSIDE_KP
checker	INSIDE_KP
