c	BEGIN_KP
and	NO_KP
c++:	NO_KP
a	NO_KP
case	NO_KP
for	NO_KP
compatibility	NO_KP
modern	NO_KP
c	BEGIN_KP
and	NO_KP
c++	BEGIN_KP
are	NO_KP
sibling	NO_KP
languages	NO_KP
descended	NO_KP
from	NO_KP
classic	NO_KP
c.	NO_KP
in	NO_KP
many	NO_KP
people's	NO_KP
minds,	NO_KP
they	NO_KP
are	NO_KP
(wrongly,	NO_KP
but	NO_KP
understandably)	NO_KP
fused	NO_KP
into	NO_KP
the	NO_KP
mythical	NO_KP
c/c++	NO_KP
programming	BEGIN_KP
language.	NO_KP
there	NO_KP
is	NO_KP
no	NO_KP
c/c++	NO_KP
language,	NO_KP
but	NO_KP
there	NO_KP
is	NO_KP
a	NO_KP
c/c++	NO_KP
community.	NO_KP
previously	NO_KP
the	NO_KP
author	NO_KP
described	NO_KP
some	NO_KP
of	NO_KP
the	NO_KP
incompatibilities	BEGIN_KP
that	NO_KP
complicate	NO_KP
the	NO_KP
work	NO_KP
of	NO_KP
developers	NO_KP
within	NO_KP
that	NO_KP
c/c++	NO_KP
community.	NO_KP
in	NO_KP
this	NO_KP
article,	NO_KP
he	NO_KP
discusses	NO_KP
some	NO_KP
of	NO_KP
the	NO_KP
underlying	NO_KP
myths	NO_KP
that	NO_KP
help	NO_KP
perpetuate	NO_KP
these	NO_KP
incompatibilities.	NO_KP
he	NO_KP
also	NO_KP
shows	NO_KP
why	NO_KP
more	NO_KP
compatibility	NO_KP
(ideally,	NO_KP
full	NO_KP
compatibility)	NO_KP
is	NO_KP
in	NO_KP
the	NO_KP
best	NO_KP
interest	NO_KP
of	NO_KP
the	NO_KP
c/c++	NO_KP
community.	NO_KP
in	NO_KP
the	NO_KP
next	NO_KP
paper,	NO_KP
he	NO_KP
presents	NO_KP
some	NO_KP
examples	NO_KP
of	NO_KP
how	NO_KP
the	NO_KP
incompatibilities	BEGIN_KP
in	NO_KP
c	BEGIN_KP
and	NO_KP
c++	BEGIN_KP
might	NO_KP
be	NO_KP
resolved	NO_KP
