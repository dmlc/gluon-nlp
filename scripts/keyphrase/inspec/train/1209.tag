high-level	NO_KP
language	BEGIN_KP
support	NO_KP
for	NO_KP
user-defined	NO_KP
reductions	BEGIN_KP
the	NO_KP
optimized	NO_KP
handling	NO_KP
of	BEGIN_KP
reductions	INSIDE_KP
on	NO_KP
parallel	BEGIN_KP
supercomputers	INSIDE_KP
or	NO_KP
clusters	BEGIN_KP
of	INSIDE_KP
workstations	INSIDE_KP
is	NO_KP
critical	NO_KP
to	NO_KP
high	NO_KP
performance	NO_KP
because	NO_KP
reductions	BEGIN_KP
are	NO_KP
common	NO_KP
in	NO_KP
scientific	BEGIN_KP
codes	NO_KP
and	NO_KP
a	NO_KP
potential	NO_KP
source	NO_KP
of	BEGIN_KP
bottlenecks.	NO_KP
yet	NO_KP
in	NO_KP
many	NO_KP
high-level	NO_KP
languages,	NO_KP
a	NO_KP
mechanism	NO_KP
for	NO_KP
writing	NO_KP
efficient	NO_KP
reductions	BEGIN_KP
remains	NO_KP
surprisingly	NO_KP
absent.	NO_KP
further,	NO_KP
when	NO_KP
such	NO_KP
mechanisms	NO_KP
do	NO_KP
exist,	NO_KP
they	NO_KP
often	NO_KP
do	NO_KP
not	NO_KP
provide	NO_KP
the	NO_KP
flexibility	NO_KP
a	NO_KP
programmer	NO_KP
needs	NO_KP
to	NO_KP
achieve	NO_KP
a	NO_KP
desirable	NO_KP
level	NO_KP
of	BEGIN_KP
performance.	NO_KP
in	NO_KP
this	NO_KP
paper,	NO_KP
we	NO_KP
present	NO_KP
a	NO_KP
new	NO_KP
language	BEGIN_KP
construct	INSIDE_KP
for	NO_KP
arbitrary	NO_KP
reductions	BEGIN_KP
that	NO_KP
lets	NO_KP
a	NO_KP
programmer	NO_KP
achieve	NO_KP
a	NO_KP
level	NO_KP
of	BEGIN_KP
performance	NO_KP
equal	NO_KP
to	NO_KP
that	NO_KP
achievable	NO_KP
with	NO_KP
the	NO_KP
highly	NO_KP
flexible,	NO_KP
but	NO_KP
low-level	NO_KP
combination	NO_KP
of	BEGIN_KP
fortran	NO_KP
and	NO_KP
mpi.	NO_KP
we	NO_KP
have	NO_KP
implemented	NO_KP
this	NO_KP
construct	BEGIN_KP
in	NO_KP
the	NO_KP
zpl	NO_KP
language	BEGIN_KP
and	NO_KP
evaluate	NO_KP
it	NO_KP
in	NO_KP
the	NO_KP
context	NO_KP
of	BEGIN_KP
the	NO_KP
initialization	NO_KP
of	BEGIN_KP
the	NO_KP
nas	NO_KP
mg	NO_KP
benchmark.	NO_KP
we	NO_KP
show	NO_KP
a	NO_KP
45	NO_KP
times	NO_KP
speedup	NO_KP
over	NO_KP
the	NO_KP
same	NO_KP
code	NO_KP
written	NO_KP
in	NO_KP
zpl	NO_KP
without	NO_KP
this	NO_KP
construct.	NO_KP
in	NO_KP
addition,	NO_KP
performance	NO_KP
on	NO_KP
a	NO_KP
large	NO_KP
number	NO_KP
of	BEGIN_KP
processors	NO_KP
surpasses	NO_KP
that	NO_KP
achieved	NO_KP
in	NO_KP
the	NO_KP
nas	NO_KP
implementation	NO_KP
showing	NO_KP
that	NO_KP
our	NO_KP
mechanism	NO_KP
provides	NO_KP
programmers	NO_KP
with	NO_KP
the	NO_KP
needed	NO_KP
flexibility	NO_KP
