connection	BEGIN_KP
management	INSIDE_KP
for	NO_KP
qos	NO_KP
service	BEGIN_KP
on	NO_KP
the	NO_KP
web	BEGIN_KP
the	NO_KP
current	NO_KP
web	BEGIN_KP
service	INSIDE_KP
model	INSIDE_KP
treats	NO_KP
all	NO_KP
requests	NO_KP
equivalently,	NO_KP
both	NO_KP
while	NO_KP
being	NO_KP
processed	NO_KP
by	NO_KP
servers	NO_KP
and	NO_KP
while	NO_KP
being	NO_KP
transmitted	NO_KP
over	NO_KP
the	NO_KP
network.	NO_KP
for	NO_KP
some	NO_KP
uses,	NO_KP
such	NO_KP
as	NO_KP
multiple	NO_KP
priority	NO_KP
schemes,	NO_KP
different	NO_KP
levels	NO_KP
of	BEGIN_KP
service	INSIDE_KP
are	NO_KP
desirable.	NO_KP
we	NO_KP
propose	NO_KP
application-level	NO_KP
tcp	BEGIN_KP
connection	INSIDE_KP
management	INSIDE_KP
mechanisms	NO_KP
for	NO_KP
web	BEGIN_KP
servers	NO_KP
to	NO_KP
provide	NO_KP
two	NO_KP
different	NO_KP
levels	NO_KP
of	BEGIN_KP
web	INSIDE_KP
service,	NO_KP
high	NO_KP
and	NO_KP
low	NO_KP
service,	NO_KP
by	NO_KP
setting	NO_KP
different	NO_KP
time-outs	NO_KP
for	NO_KP
inactive	NO_KP
tcp	BEGIN_KP
connections.	NO_KP
we	NO_KP
evaluated	NO_KP
the	NO_KP
performance	NO_KP
of	BEGIN_KP
the	NO_KP
mechanism	NO_KP
under	NO_KP
heavy	NO_KP
and	NO_KP
light	NO_KP
loading	NO_KP
conditions	NO_KP
on	NO_KP
the	NO_KP
web	BEGIN_KP
server.	NO_KP
our	NO_KP
experiments	NO_KP
show	NO_KP
that,	NO_KP
though	NO_KP
heavy	NO_KP
traffic	BEGIN_KP
saturates	NO_KP
the	NO_KP
network,	NO_KP
high	NO_KP
level	NO_KP
class	NO_KP
performance	NO_KP
is	NO_KP
improved	NO_KP
by	NO_KP
as	NO_KP
much	NO_KP
as	NO_KP
25-28%.	NO_KP
therefore,	NO_KP
this	NO_KP
mechanism	NO_KP
can	NO_KP
effectively	NO_KP
provide	NO_KP
qos	NO_KP
guaranteed	NO_KP
services	NO_KP
even	NO_KP
in	NO_KP
the	NO_KP
absence	NO_KP
of	BEGIN_KP
operating	NO_KP
system	NO_KP
and	NO_KP
network	NO_KP
supports	NO_KP
