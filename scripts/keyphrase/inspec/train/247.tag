the	NO_KP
congenial	BEGIN_KP
talking	INSIDE_KP
philosophers	INSIDE_KP
problem	INSIDE_KP
in	NO_KP
computer	BEGIN_KP
networks	INSIDE_KP
group	INSIDE_KP
mutual	INSIDE_KP
exclusion	INSIDE_KP
occurs	NO_KP
naturally	NO_KP
in	NO_KP
situations	NO_KP
where	NO_KP
a	NO_KP
resource	BEGIN_KP
can	NO_KP
be	NO_KP
shared	NO_KP
by	NO_KP
processes	NO_KP
of	NO_KP
the	NO_KP
same	NO_KP
group,	NO_KP
but	NO_KP
not	NO_KP
by	NO_KP
processes	NO_KP
of	NO_KP
different	NO_KP
groups.	NO_KP
for	NO_KP
example,	NO_KP
suppose	NO_KP
data	NO_KP
is	NO_KP
stored	NO_KP
in	NO_KP
a	NO_KP
cd-jukebox.	NO_KP
then,	NO_KP
when	NO_KP
a	NO_KP
disc	NO_KP
is	NO_KP
loaded	NO_KP
for	NO_KP
access,	NO_KP
users	NO_KP
that	NO_KP
need	NO_KP
data	NO_KP
on	NO_KP
the	NO_KP
disc	NO_KP
can	NO_KP
concurrently	NO_KP
access	NO_KP
the	NO_KP
disc,	NO_KP
while	NO_KP
users	NO_KP
that	NO_KP
need	NO_KP
data	NO_KP
on	NO_KP
a	NO_KP
different	NO_KP
disc	NO_KP
have	NO_KP
to	NO_KP
wait	NO_KP
until	NO_KP
the	NO_KP
current	NO_KP
disc	NO_KP
is	NO_KP
unloaded.	NO_KP
the	NO_KP
design	NO_KP
issues	NO_KP
for	NO_KP
group	BEGIN_KP
mutual	INSIDE_KP
exclusion	INSIDE_KP
have	NO_KP
been	NO_KP
modeled	NO_KP
as	NO_KP
the	NO_KP
congenial	BEGIN_KP
talking	INSIDE_KP
philosophers	INSIDE_KP
problem,	NO_KP
and	NO_KP
solutions	NO_KP
for	NO_KP
shared	NO_KP
memory	NO_KP
models	BEGIN_KP
have	NO_KP
been	NO_KP
proposed	NO_KP
(y.-j.	NO_KP
young,	NO_KP
2000;	NO_KP
p.	NO_KP
keane	NO_KP
and	NO_KP
m.	NO_KP
moir,	NO_KP
1999).	NO_KP
as	NO_KP
in	NO_KP
ordinary	NO_KP
mutual	BEGIN_KP
exclusion	INSIDE_KP
and	NO_KP
many	NO_KP
other	NO_KP
problems	NO_KP
in	NO_KP
distributed	BEGIN_KP
systems,	NO_KP
however,	NO_KP
techniques	NO_KP
developed	NO_KP
for	NO_KP
shared	NO_KP
memory	NO_KP
do	NO_KP
not	NO_KP
necessarily	NO_KP
apply	NO_KP
to	NO_KP
message	BEGIN_KP
passing	INSIDE_KP
(and	NO_KP
vice	NO_KP
versa).	NO_KP
we	NO_KP
investigate	NO_KP
solutions	NO_KP
for	NO_KP
congenial	BEGIN_KP
talking	INSIDE_KP
philosophers	INSIDE_KP
in	NO_KP
computer	BEGIN_KP
networks	INSIDE_KP
where	NO_KP
processes	NO_KP
communicate	NO_KP
by	NO_KP
asynchronous	BEGIN_KP
message	INSIDE_KP
passing.	NO_KP
we	NO_KP
first	NO_KP
present	NO_KP
a	NO_KP
solution	NO_KP
that	NO_KP
is	NO_KP
a	NO_KP
straightforward	NO_KP
adaptation	NO_KP
from	NO_KP
g.	NO_KP
ricart	NO_KP
and	NO_KP
a.k.	NO_KP
agrawala's	NO_KP
(1981)	NO_KP
algorithm	BEGIN_KP
for	NO_KP
ordinary	NO_KP
mutual	BEGIN_KP
exclusion.	NO_KP
then	NO_KP
we	NO_KP
show	NO_KP
that	NO_KP
the	NO_KP
simple	NO_KP
modification	NO_KP
suffers	NO_KP
a	NO_KP
severe	NO_KP
performance	NO_KP
degradation	NO_KP
that	NO_KP
could	NO_KP
cause	NO_KP
the	NO_KP
system	NO_KP
to	NO_KP
behave	NO_KP
as	NO_KP
though	NO_KP
only	NO_KP
one	NO_KP
process	BEGIN_KP
of	NO_KP
a	NO_KP
group	BEGIN_KP
can	NO_KP
be	NO_KP
in	NO_KP
the	NO_KP
critical	BEGIN_KP
section	NO_KP
at	NO_KP
a	NO_KP
time.	NO_KP
we	NO_KP
then	NO_KP
present	NO_KP
a	NO_KP
more	NO_KP
efficient	NO_KP
and	NO_KP
highly	NO_KP
concurrent	BEGIN_KP
distributed	INSIDE_KP
algorithm	INSIDE_KP
for	NO_KP
the	NO_KP
problem,	NO_KP
the	NO_KP
first	NO_KP
such	NO_KP
solution	NO_KP
in	NO_KP
computer	BEGIN_KP
networks	INSIDE_KP
