a	NO_KP
static	BEGIN_KP
semantics	INSIDE_KP
for	NO_KP
haskell	BEGIN_KP
this	NO_KP
paper	NO_KP
gives	NO_KP
a	NO_KP
static	BEGIN_KP
semantics	INSIDE_KP
for	NO_KP
haskell	BEGIN_KP
98,	NO_KP
a	NO_KP
non-strict	NO_KP
purely	BEGIN_KP
functional	INSIDE_KP
programming	INSIDE_KP
language.	NO_KP
the	NO_KP
semantics	BEGIN_KP
formally	NO_KP
specifies	NO_KP
nearly	NO_KP
all	NO_KP
the	NO_KP
details	NO_KP
of	NO_KP
the	NO_KP
haskell	BEGIN_KP
98	INSIDE_KP
type	INSIDE_KP
system,	NO_KP
including	NO_KP
the	NO_KP
resolution	NO_KP
of	NO_KP
overloading,	NO_KP
kind	BEGIN_KP
inference	INSIDE_KP
(including	NO_KP
defaulting)	NO_KP
and	NO_KP
polymorphic	BEGIN_KP
recursion,	NO_KP
the	NO_KP
only	NO_KP
major	NO_KP
omission	NO_KP
being	NO_KP
a	NO_KP
proper	NO_KP
treatment	NO_KP
of	NO_KP
ambiguous	NO_KP
overloading	BEGIN_KP
and	NO_KP
its	NO_KP
resolution.	NO_KP
overloading	BEGIN_KP
is	NO_KP
translated	NO_KP
into	NO_KP
explicit	BEGIN_KP
dictionary	INSIDE_KP
passing,	NO_KP
as	NO_KP
in	NO_KP
all	NO_KP
current	NO_KP
implementations	NO_KP
of	NO_KP
haskell.	NO_KP
the	NO_KP
target	NO_KP
language	BEGIN_KP
of	NO_KP
this	NO_KP
translation	NO_KP
is	NO_KP
a	NO_KP
variant	NO_KP
of	NO_KP
the	NO_KP
girard-reynolds	NO_KP
polymorphic	BEGIN_KP
lambda	INSIDE_KP
calculus	INSIDE_KP
featuring	NO_KP
higher	BEGIN_KP
order	INSIDE_KP
polymorphism.	NO_KP
and	NO_KP
explicit	BEGIN_KP
type	INSIDE_KP
abstraction	INSIDE_KP
and	NO_KP
application	NO_KP
in	NO_KP
the	NO_KP
term	BEGIN_KP
language.	NO_KP
translated	NO_KP
programs	NO_KP
can	NO_KP
thus	NO_KP
still	NO_KP
be	NO_KP
type	BEGIN_KP
checked,	NO_KP
although	NO_KP
the	NO_KP
implicit	NO_KP
version	NO_KP
of	NO_KP
this	NO_KP
system	BEGIN_KP
is	NO_KP
impredicative.	NO_KP
a	NO_KP
surprising	NO_KP
result	NO_KP
of	NO_KP
this	NO_KP
formalization	NO_KP
effort	NO_KP
is	NO_KP
that	NO_KP
the	NO_KP
monomorphism	BEGIN_KP
restriction,	NO_KP
when	NO_KP
rendered	NO_KP
in	NO_KP
a	NO_KP
system	BEGIN_KP
of	NO_KP
inference	BEGIN_KP
rules,	NO_KP
compromises	NO_KP
the	NO_KP
principal	NO_KP
type	BEGIN_KP
property	NO_KP
