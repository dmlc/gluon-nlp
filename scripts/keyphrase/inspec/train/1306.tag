scalable	BEGIN_KP
hybrid	INSIDE_KP
computation	INSIDE_KP
with	NO_KP
spikes	BEGIN_KP
we	NO_KP
outline	NO_KP
a	NO_KP
hybrid	BEGIN_KP
analog-digital	INSIDE_KP
scheme	NO_KP
for	NO_KP
computing	NO_KP
with	NO_KP
three	NO_KP
important	NO_KP
features	NO_KP
that	NO_KP
enable	NO_KP
it	NO_KP
to	NO_KP
scale	NO_KP
to	NO_KP
systems	NO_KP
of	NO_KP
large	NO_KP
complexity:	NO_KP
first,	NO_KP
like	NO_KP
digital	BEGIN_KP
computation,	NO_KP
which	NO_KP
uses	NO_KP
several	NO_KP
one-bit	NO_KP
precise	NO_KP
logical	NO_KP
units	BEGIN_KP
to	NO_KP
collectively	NO_KP
compute	NO_KP
a	NO_KP
precise	NO_KP
answer	NO_KP
to	NO_KP
a	NO_KP
computation,	NO_KP
the	NO_KP
hybrid	BEGIN_KP
scheme	NO_KP
uses	NO_KP
several	NO_KP
moderate-precision	BEGIN_KP
analog	INSIDE_KP
units	INSIDE_KP
to	NO_KP
collectively	NO_KP
compute	NO_KP
a	NO_KP
precise	NO_KP
answer	NO_KP
to	NO_KP
a	NO_KP
computation.	NO_KP
second,	NO_KP
frequent	BEGIN_KP
discrete	INSIDE_KP
signal	INSIDE_KP
restoration	NO_KP
of	NO_KP
the	NO_KP
analog	BEGIN_KP
information	NO_KP
prevents	NO_KP
analog	BEGIN_KP
noise	INSIDE_KP
and	NO_KP
offset	NO_KP
from	NO_KP
degrading	NO_KP
the	NO_KP
computation.	NO_KP
third,	NO_KP
a	NO_KP
state	BEGIN_KP
machine	INSIDE_KP
enables	NO_KP
complex	NO_KP
computations	NO_KP
to	NO_KP
be	NO_KP
created	NO_KP
using	NO_KP
a	NO_KP
sequence	NO_KP
of	NO_KP
elementary	NO_KP
computations.	NO_KP
a	NO_KP
natural	NO_KP
choice	NO_KP
for	NO_KP
implementing	NO_KP
this	NO_KP
hybrid	BEGIN_KP
scheme	NO_KP
is	NO_KP
one	NO_KP
based	NO_KP
on	NO_KP
spikes	BEGIN_KP
because	NO_KP
spike-count	BEGIN_KP
codes	INSIDE_KP
are	NO_KP
digital,	NO_KP
while	NO_KP
spike-time	BEGIN_KP
codes	INSIDE_KP
are	NO_KP
analog.	NO_KP
we	NO_KP
illustrate	NO_KP
how	NO_KP
spikes	BEGIN_KP
afford	NO_KP
easy	NO_KP
ways	NO_KP
to	NO_KP
implement	NO_KP
all	NO_KP
three	NO_KP
components	NO_KP
of	NO_KP
scalable	BEGIN_KP
hybrid	INSIDE_KP
computation.	NO_KP
first,	NO_KP
as	NO_KP
an	NO_KP
important	NO_KP
example	NO_KP
of	NO_KP
distributed	BEGIN_KP
analog	INSIDE_KP
computation,	NO_KP
we	NO_KP
show	NO_KP
how	NO_KP
spikes	BEGIN_KP
can	NO_KP
create	NO_KP
a	NO_KP
distributed	BEGIN_KP
modular	NO_KP
representation	NO_KP
of	NO_KP
an	NO_KP
analog	BEGIN_KP
number	NO_KP
by	NO_KP
implementing	NO_KP
digital	BEGIN_KP
carry	INSIDE_KP
interactions	INSIDE_KP
between	NO_KP
spiking	NO_KP
analog	BEGIN_KP
neurons.	NO_KP
second,	NO_KP
we	NO_KP
show	NO_KP
how	NO_KP
signal	BEGIN_KP
restoration	NO_KP
may	NO_KP
be	NO_KP
performed	NO_KP
by	NO_KP
recursive	NO_KP
spike-count	BEGIN_KP
quantization	INSIDE_KP
of	NO_KP
spike-time	BEGIN_KP
codes.	NO_KP
third,	NO_KP
we	NO_KP
use	NO_KP
spikes	BEGIN_KP
from	NO_KP
an	NO_KP
analog	BEGIN_KP
dynamical	NO_KP
system	NO_KP
to	NO_KP
trigger	NO_KP
state	BEGIN_KP
transitions	NO_KP
in	NO_KP
a	NO_KP
digital	BEGIN_KP
dynamical	NO_KP
system,	NO_KP
which	NO_KP
reconfigures	NO_KP
the	NO_KP
analog	BEGIN_KP
dynamical	NO_KP
system	NO_KP
using	NO_KP
a	NO_KP
binary	BEGIN_KP
control	INSIDE_KP
vector;	NO_KP
such	NO_KP
feedback	BEGIN_KP
interactions	INSIDE_KP
between	NO_KP
analog	BEGIN_KP
and	NO_KP
digital	BEGIN_KP
dynamical	NO_KP
systems	NO_KP
create	NO_KP
a	NO_KP
hybrid	BEGIN_KP
state	INSIDE_KP
machine	INSIDE_KP
(hsm).	NO_KP
the	NO_KP
hsm	NO_KP
extends	NO_KP
and	NO_KP
expands	NO_KP
the	NO_KP
concept	NO_KP
of	NO_KP
a	NO_KP
digital	BEGIN_KP
finite-state-machine	INSIDE_KP
to	NO_KP
the	NO_KP
hybrid	BEGIN_KP
domain.	NO_KP
we	NO_KP
present	NO_KP
experimental	NO_KP
data	NO_KP
from	NO_KP
a	NO_KP
two-neuron	NO_KP
hsm	NO_KP
on	NO_KP
a	NO_KP
chip	NO_KP
that	NO_KP
implements	NO_KP
error-correcting	BEGIN_KP
analog-to-digital	INSIDE_KP
conversion	INSIDE_KP
with	NO_KP
the	NO_KP
concurrent	NO_KP
use	NO_KP
of	NO_KP
spike-time	BEGIN_KP
and	NO_KP
spike-count	BEGIN_KP
codes.	NO_KP
we	NO_KP
also	NO_KP
present	NO_KP
experimental	NO_KP
data	NO_KP
from	NO_KP
silicon	BEGIN_KP
circuits	INSIDE_KP
that	NO_KP
implement	NO_KP
hsm-based	NO_KP
pattern	BEGIN_KP
recognition	INSIDE_KP
using	NO_KP
spike-time	BEGIN_KP
synchrony.	NO_KP
we	NO_KP
outline	NO_KP
how	NO_KP
hsms	NO_KP
may	NO_KP
be	NO_KP
used	NO_KP
to	NO_KP
perform	NO_KP
learning,	NO_KP
vector	BEGIN_KP
quantization,	NO_KP
spike	NO_KP
pattern	BEGIN_KP
recognition	INSIDE_KP
and	NO_KP
generation,	NO_KP
and	NO_KP
how	NO_KP
they	NO_KP
may	NO_KP
be	NO_KP
reconfigured	NO_KP
