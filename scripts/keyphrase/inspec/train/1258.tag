implementation	NO_KP
and	NO_KP
performance	BEGIN_KP
evaluation	NO_KP
of	NO_KP
a	NO_KP
fifo	BEGIN_KP
queue	INSIDE_KP
class	INSIDE_KP
library	INSIDE_KP
for	NO_KP
time	BEGIN_KP
warp	INSIDE_KP
the	NO_KP
authors	NO_KP
describe	NO_KP
the	NO_KP
implementation,	NO_KP
use,	NO_KP
and	NO_KP
performance	BEGIN_KP
evaluation	NO_KP
of	NO_KP
a	NO_KP
fifo	BEGIN_KP
queue	INSIDE_KP
class	INSIDE_KP
library	INSIDE_KP
by	NO_KP
means	NO_KP
of	NO_KP
a	NO_KP
high-performance,	NO_KP
easy-to-use	BEGIN_KP
interface	INSIDE_KP
employed	NO_KP
for	NO_KP
queuing	BEGIN_KP
simulations	INSIDE_KP
in	NO_KP
parallel	BEGIN_KP
discrete	INSIDE_KP
simulations	INSIDE_KP
based	NO_KP
on	NO_KP
the	NO_KP
time	BEGIN_KP
warp	INSIDE_KP
method.	NO_KP
various	NO_KP
general-purpose	BEGIN_KP
simulation	INSIDE_KP
libraries	INSIDE_KP
and	NO_KP
languages	BEGIN_KP
have	NO_KP
been	NO_KP
proposed,	NO_KP
and	NO_KP
among	NO_KP
these	NO_KP
some	NO_KP
have	NO_KP
the	NO_KP
advantage	NO_KP
of	NO_KP
not	NO_KP
requiring	NO_KP
users	NO_KP
to	NO_KP
define	NO_KP
anything	NO_KP
other	NO_KP
than	NO_KP
the	NO_KP
state	BEGIN_KP
vector,	NO_KP
and	NO_KP
not	NO_KP
needing	NO_KP
awareness	NO_KP
of	NO_KP
rollback	NO_KP
under	NO_KP
a	NO_KP
platform	NO_KP
which	NO_KP
performs	NO_KP
state	BEGIN_KP
control	NO_KP
based	NO_KP
on	NO_KP
copies.	NO_KP
however,	NO_KP
because	NO_KP
the	NO_KP
state	BEGIN_KP
vectors	INSIDE_KP
must	NO_KP
be	NO_KP
defined	NO_KP
as	NO_KP
simple	NO_KP
data	BEGIN_KP
structures	INSIDE_KP
without	NO_KP
pointers,	NO_KP
dynamic	BEGIN_KP
data	INSIDE_KP
structures	INSIDE_KP
such	NO_KP
as	NO_KP
a	NO_KP
fifo	BEGIN_KP
queue	INSIDE_KP
cannot	NO_KP
be	NO_KP
handled	NO_KP
directly.	NO_KP
under	NO_KP
the	NO_KP
proposed	NO_KP
class	BEGIN_KP
library,	NO_KP
both	NO_KP
the	NO_KP
platform	NO_KP
and	NO_KP
the	NO_KP
user	NO_KP
can	NO_KP
handle	NO_KP
such	NO_KP
structures	BEGIN_KP
in	NO_KP
the	NO_KP
same	NO_KP
fashion	NO_KP
that	NO_KP
embedded	BEGIN_KP
data	INSIDE_KP
structures	INSIDE_KP
are	NO_KP
handled.	NO_KP
in	NO_KP
addition,	NO_KP
instead	NO_KP
of	NO_KP
all	NO_KP
stored	NO_KP
data,	NO_KP
just	NO_KP
the	NO_KP
operational	BEGIN_KP
history	INSIDE_KP
can	NO_KP
be	NO_KP
stored	NO_KP
and	NO_KP
recovered	NO_KP
efficiently	NO_KP
at	NO_KP
an	NO_KP
effectively	NO_KP
minimal	NO_KP
cost	NO_KP
by	NO_KP
taking	NO_KP
advantage	NO_KP
of	NO_KP
the	NO_KP
first-in-first-out	BEGIN_KP
characteristics	NO_KP
of	NO_KP
the	NO_KP
above	NO_KP
data	BEGIN_KP
structures.	NO_KP
when	NO_KP
the	NO_KP
kernel	NO_KP
deletes	NO_KP
past	NO_KP
state	BEGIN_KP
histories	NO_KP
during	NO_KP
a	NO_KP
simulation,	NO_KP
garbage	BEGIN_KP
collection	INSIDE_KP
is	NO_KP
also	NO_KP
performed	NO_KP
transparently	NO_KP
using	NO_KP
the	NO_KP
corresponding	NO_KP
method	BEGIN_KP
