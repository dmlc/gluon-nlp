products	BEGIN_KP
and	NO_KP
polymorphic	BEGIN_KP
subtypes	INSIDE_KP
this	NO_KP
paper	NO_KP
is	NO_KP
devoted	NO_KP
to	NO_KP
a	NO_KP
comprehensive	NO_KP
study	NO_KP
of	NO_KP
polymorphic	BEGIN_KP
subtypes	INSIDE_KP
with	NO_KP
products.	NO_KP
we	NO_KP
first	NO_KP
present	NO_KP
a	NO_KP
sound	NO_KP
and	NO_KP
complete	NO_KP
hilbert	BEGIN_KP
style	INSIDE_KP
axiomatization	INSIDE_KP
of	NO_KP
the	NO_KP
relation	NO_KP
of	NO_KP
being	NO_KP
a	NO_KP
subtype	NO_KP
in	NO_KP
presence	NO_KP
of	NO_KP
to	NO_KP
,	NO_KP
*	NO_KP
type	NO_KP
constructors	NO_KP
and	NO_KP
the	NO_KP
for	NO_KP
all	NO_KP
quantifier,	NO_KP
and	NO_KP
we	NO_KP
show	NO_KP
that	NO_KP
such	NO_KP
axiornatization	NO_KP
is	NO_KP
not	NO_KP
encodable	NO_KP
in	NO_KP
the	NO_KP
system	NO_KP
with	NO_KP
to	NO_KP
,	NO_KP
for	NO_KP
all	NO_KP
only.	NO_KP
in	NO_KP
order	NO_KP
to	NO_KP
give	NO_KP
a	NO_KP
logical	BEGIN_KP
semantics	INSIDE_KP
to	NO_KP
such	NO_KP
a	NO_KP
subtyping	NO_KP
relation,	NO_KP
we	NO_KP
propose	NO_KP
a	NO_KP
new	NO_KP
form	NO_KP
of	NO_KP
a	NO_KP
sequent	NO_KP
which	NO_KP
plays	NO_KP
a	NO_KP
key	NO_KP
role	NO_KP
in	NO_KP
a	NO_KP
natural	NO_KP
deduction	NO_KP
and	NO_KP
a	NO_KP
gentzen	BEGIN_KP
style	INSIDE_KP
calculi.	NO_KP
interestingly	NO_KP
enough,	NO_KP
the	NO_KP
sequent	NO_KP
must	NO_KP
have	NO_KP
the	NO_KP
form	NO_KP
e	NO_KP
implies	NO_KP
t,	NO_KP
where	NO_KP
e	NO_KP
is	NO_KP
a	NO_KP
non-commutative,	NO_KP
non-empty	NO_KP
sequence	NO_KP
of	NO_KP
typing	NO_KP
assumptions	NO_KP
and	NO_KP
t	NO_KP
is	NO_KP
a	NO_KP
finite	BEGIN_KP
binary	INSIDE_KP
tree	INSIDE_KP
of	NO_KP
typing	NO_KP
judgements,	NO_KP
each	NO_KP
of	NO_KP
them	NO_KP
behaving	NO_KP
like	NO_KP
a	NO_KP
pushdown	BEGIN_KP
store.	NO_KP
we	NO_KP
study	NO_KP
basic	NO_KP
metamathematical	NO_KP
properties	BEGIN_KP
of	NO_KP
the	NO_KP
two	NO_KP
logical	BEGIN_KP
systems,	NO_KP
such	NO_KP
as	NO_KP
subject	NO_KP
reduction	NO_KP
and	NO_KP
cut	NO_KP
elimination.	NO_KP
some	NO_KP
decidability/undecidability	NO_KP
issues	NO_KP
related	NO_KP
to	NO_KP
the	NO_KP
presented	NO_KP
subtyping	NO_KP
relation	NO_KP
are	NO_KP
also	NO_KP
explored:	NO_KP
as	NO_KP
expected,	NO_KP
the	NO_KP
subtyping	NO_KP
over	NO_KP
to	NO_KP
,	NO_KP
*,	NO_KP
for	NO_KP
all	NO_KP
is	NO_KP
undecidable,	NO_KP
being	NO_KP
already	NO_KP
undecidable	NO_KP
for	NO_KP
the	NO_KP
to	NO_KP
,	NO_KP
for	NO_KP
all	NO_KP
fragment	NO_KP
(as	NO_KP
proved	NO_KP
in	NO_KP
[15]),	NO_KP
but	NO_KP
for	NO_KP
the	NO_KP
*,	NO_KP
for	NO_KP
all	NO_KP
fragment	NO_KP
it	NO_KP
turns	NO_KP
out	NO_KP
to	NO_KP
be	NO_KP
decidable	NO_KP
