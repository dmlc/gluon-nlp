advanced	NO_KP
optimization	BEGIN_KP
strategies	NO_KP
in	NO_KP
the	NO_KP
rice	BEGIN_KP
dhpf	INSIDE_KP
compiler	INSIDE_KP
high-performance	NO_KP
fortran	BEGIN_KP
(hpf)	NO_KP
was	NO_KP
envisioned	NO_KP
as	NO_KP
a	NO_KP
vehicle	NO_KP
for	NO_KP
modernizing	NO_KP
legacy	BEGIN_KP
fortran	INSIDE_KP
codes	INSIDE_KP
to	NO_KP
achieve	NO_KP
scalable	NO_KP
parallel	BEGIN_KP
performance.	NO_KP
to	NO_KP
a	NO_KP
large	NO_KP
extent,	NO_KP
today's	NO_KP
commercially	NO_KP
available	NO_KP
hpf	BEGIN_KP
compilers	INSIDE_KP
have	NO_KP
failed	NO_KP
to	NO_KP
deliver	NO_KP
scalable	NO_KP
parallel	BEGIN_KP
performance	INSIDE_KP
for	NO_KP
a	NO_KP
broad	NO_KP
spectrum	NO_KP
of	NO_KP
applications	NO_KP
because	NO_KP
of	NO_KP
insufficiently	NO_KP
powerful	NO_KP
compiler	BEGIN_KP
analysis	INSIDE_KP
and	NO_KP
optimization.	NO_KP
substantial	NO_KP
restructuring	NO_KP
and	NO_KP
hand-optimization	NO_KP
can	NO_KP
be	NO_KP
required	NO_KP
to	NO_KP
achieve	NO_KP
acceptable	NO_KP
performance	BEGIN_KP
with	NO_KP
an	NO_KP
hpf	BEGIN_KP
port	NO_KP
of	NO_KP
an	NO_KP
existing	NO_KP
fortran	BEGIN_KP
application,	NO_KP
even	NO_KP
for	NO_KP
regular	NO_KP
data-parallel	NO_KP
applications.	NO_KP
a	NO_KP
key	NO_KP
goal	NO_KP
of	NO_KP
the	NO_KP
rice	BEGIN_KP
dhpf	INSIDE_KP
compiler	INSIDE_KP
project	NO_KP
has	NO_KP
been	NO_KP
to	NO_KP
develop	NO_KP
optimization	BEGIN_KP
techniques	NO_KP
that	NO_KP
enable	NO_KP
a	NO_KP
wide	NO_KP
range	NO_KP
of	NO_KP
existing	NO_KP
scientific	NO_KP
applications	NO_KP
to	NO_KP
be	NO_KP
ported	NO_KP
easily	NO_KP
to	NO_KP
efficient	NO_KP
hpf	BEGIN_KP
with	NO_KP
minimal	NO_KP
restructuring.	NO_KP
this	NO_KP
paper	NO_KP
describes	NO_KP
the	NO_KP
challenges	NO_KP
to	NO_KP
effective	NO_KP
parallelization	BEGIN_KP
presented	NO_KP
by	NO_KP
complex	NO_KP
(but	NO_KP
regular)	NO_KP
data-parallel	NO_KP
applications,	NO_KP
and	NO_KP
then	NO_KP
describes	NO_KP
how	NO_KP
the	NO_KP
novel	NO_KP
analysis	BEGIN_KP
and	NO_KP
optimization	BEGIN_KP
technologies	NO_KP
in	NO_KP
the	NO_KP
dhpf	BEGIN_KP
compiler	INSIDE_KP
address	NO_KP
these	NO_KP
challenges	NO_KP
effectively,	NO_KP
without	NO_KP
major	NO_KP
rewriting	NO_KP
of	NO_KP
the	NO_KP
applications.	NO_KP
we	NO_KP
illustrate	NO_KP
the	NO_KP
techniques	NO_KP
by	NO_KP
describing	NO_KP
their	NO_KP
use	NO_KP
for	NO_KP
parallelizing	NO_KP
the	NO_KP
nas	NO_KP
sp	NO_KP
and	NO_KP
bt	NO_KP
benchmarks.	NO_KP
the	NO_KP
dhpf	BEGIN_KP
compiler	INSIDE_KP
generates	NO_KP
multipartitioned	NO_KP
parallelizations	NO_KP
of	NO_KP
these	NO_KP
codes	BEGIN_KP
that	NO_KP
are	NO_KP
approaching	NO_KP
the	NO_KP
scalability	NO_KP
and	NO_KP
efficiency	NO_KP
of	NO_KP
sophisticated	NO_KP
hand-coded	NO_KP
parallelizations	NO_KP
