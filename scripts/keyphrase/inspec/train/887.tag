towards	NO_KP
strong	BEGIN_KP
stability	INSIDE_KP
of	NO_KP
concurrent	BEGIN_KP
repetitive	INSIDE_KP
processes	INSIDE_KP
sharing	NO_KP
resources	NO_KP
the	NO_KP
paper	NO_KP
presents	NO_KP
a	NO_KP
method	NO_KP
for	NO_KP
design	NO_KP
of	NO_KP
stability	BEGIN_KP
conditions	INSIDE_KP
of	NO_KP
concurrent,	NO_KP
repetitive	BEGIN_KP
processes	INSIDE_KP
sharing	NO_KP
common	BEGIN_KP
resources.	NO_KP
steady-state	BEGIN_KP
behaviour	INSIDE_KP
of	NO_KP
the	NO_KP
system	BEGIN_KP
with	NO_KP
m	NO_KP
cyclic	BEGIN_KP
processes	INSIDE_KP
utilising	NO_KP
a	NO_KP
resource	NO_KP
with	NO_KP
the	NO_KP
mutual	BEGIN_KP
exclusion	INSIDE_KP
is	NO_KP
considered.	NO_KP
based	NO_KP
on	NO_KP
a	NO_KP
recurrent	BEGIN_KP
equations	INSIDE_KP
framework	INSIDE_KP
necessary	INSIDE_KP
and	INSIDE_KP
sufficient	INSIDE_KP
conditions	INSIDE_KP
for	NO_KP
the	NO_KP
existence	NO_KP
of	NO_KP
maximal	BEGIN_KP
performance	INSIDE_KP
steady-state	INSIDE_KP
are	NO_KP
presented.	NO_KP
it	NO_KP
was	NO_KP
shown	NO_KP
that	NO_KP
if	NO_KP
the	NO_KP
conditions	BEGIN_KP
hold	NO_KP
then	NO_KP
the	NO_KP
m-process	NO_KP
system	BEGIN_KP
is	NO_KP
marginally	NO_KP
stable,	NO_KP
i.e.,	NO_KP
a	NO_KP
steady-state	BEGIN_KP
of	NO_KP
the	NO_KP
system	BEGIN_KP
depends	NO_KP
on	NO_KP
the	NO_KP
perturbations.	NO_KP
the	NO_KP
problem	NO_KP
of	NO_KP
finding	NO_KP
the	NO_KP
relative	NO_KP
positions	NO_KP
of	NO_KP
the	NO_KP
processes	BEGIN_KP
leading	NO_KP
to	NO_KP
waiting-free	BEGIN_KP
(maximal	NO_KP
efficiency)	NO_KP
steady-states	BEGIN_KP
of	NO_KP
the	NO_KP
system	BEGIN_KP
is	NO_KP
formulated	NO_KP
as	NO_KP
a	NO_KP
constraint	BEGIN_KP
logic	INSIDE_KP
programming	INSIDE_KP
problem.	NO_KP
an	NO_KP
example	NO_KP
illustrating	NO_KP
the	NO_KP
solving	NO_KP
of	NO_KP
the	NO_KP
problem	NO_KP
for	NO_KP
a	NO_KP
3-process	BEGIN_KP
system	INSIDE_KP
using	NO_KP
object-oriented,	NO_KP
constraint	BEGIN_KP
logic	INSIDE_KP
programming	INSIDE_KP
language	INSIDE_KP
oz	INSIDE_KP
is	NO_KP
presented.	NO_KP
a	NO_KP
condition	NO_KP
sufficient	BEGIN_KP
for	NO_KP
strong	BEGIN_KP
stability	INSIDE_KP
of	NO_KP
the	NO_KP
m-process	NO_KP
system	BEGIN_KP
is	NO_KP
given.	NO_KP
when	NO_KP
the	NO_KP
condition	NO_KP
holds	NO_KP
then	NO_KP
for	NO_KP
any	NO_KP
initial	NO_KP
phases	NO_KP
of	NO_KP
the	NO_KP
processes	BEGIN_KP
a	NO_KP
waiting-free	BEGIN_KP
steady-state	INSIDE_KP
will	NO_KP
be	NO_KP
reached	NO_KP
