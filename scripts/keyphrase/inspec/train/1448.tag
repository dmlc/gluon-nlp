implementing	NO_KP
equals	BEGIN_KP
for	NO_KP
mixed-type	BEGIN_KP
comparison	NO_KP
the	NO_KP
idea	NO_KP
of	NO_KP
comparing	NO_KP
objects	NO_KP
of	NO_KP
different	NO_KP
types	NO_KP
is	NO_KP
not	NO_KP
entirely	NO_KP
off	NO_KP
base,	NO_KP
in	NO_KP
particular	NO_KP
for	NO_KP
classes	NO_KP
from	NO_KP
the	NO_KP
same	NO_KP
class	NO_KP
hierarchy.	NO_KP
after	NO_KP
all,	NO_KP
objects	NO_KP
from	NO_KP
the	NO_KP
same	NO_KP
class	NO_KP
hierarchy	NO_KP
(and	NO_KP
by	NO_KP
class	NO_KP
hierarchy	NO_KP
we	NO_KP
mean	NO_KP
all	NO_KP
classes	NO_KP
derived	NO_KP
from	NO_KP
a	NO_KP
common	NO_KP
superclass	BEGIN_KP
other	NO_KP
than	NO_KP
object)	NO_KP
have	NO_KP
something	NO_KP
in	NO_KP
common,	NO_KP
namely	NO_KP
at	NO_KP
least	NO_KP
the	NO_KP
superclass	BEGIN_KP
part.	NO_KP
as	NO_KP
we	NO_KP
demonstrated	NO_KP
in	NO_KP
a	NO_KP
previous	NO_KP
paper	NO_KP
(2002),	NO_KP
providing	NO_KP
a	NO_KP
correct	NO_KP
implementation	NO_KP
of	NO_KP
a	NO_KP
mixed-type	BEGIN_KP
comparison	NO_KP
is	NO_KP
a	NO_KP
non-trivial	NO_KP
task.	NO_KP
in	NO_KP
this	NO_KP
article,	NO_KP
we	NO_KP
will	NO_KP
show	NO_KP
one	NO_KP
way	NO_KP
of	NO_KP
implementing	NO_KP
a	NO_KP
mixed-type	BEGIN_KP
comparison	NO_KP
of	NO_KP
objects	NO_KP
from	NO_KP
the	NO_KP
same	NO_KP
class	NO_KP
hierarchy	NO_KP
that	NO_KP
meets	NO_KP
the	NO_KP
requirements	NO_KP
of	NO_KP
the	NO_KP
equals	BEGIN_KP
contract	INSIDE_KP
