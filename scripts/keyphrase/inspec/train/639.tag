distributed	INSIDE_KP
servers	INSIDE_KP
approach	NO_KP
for	NO_KP
large-scale	BEGIN_KP
secure	INSIDE_KP
multicast	INSIDE_KP
in	NO_KP
order	NO_KP
to	NO_KP
offer	NO_KP
backward	BEGIN_KP
and	NO_KP
forward	BEGIN_KP
secrecy	INSIDE_KP
for	NO_KP
multicast	BEGIN_KP
applications	INSIDE_KP
(i.e.,	NO_KP
a	NO_KP
new	NO_KP
member	NO_KP
cannot	NO_KP
decrypt	NO_KP
the	NO_KP
multicast	BEGIN_KP
data	INSIDE_KP
sent	NO_KP
before	NO_KP
its	NO_KP
joining	NO_KP
and	NO_KP
a	NO_KP
former	NO_KP
member	NO_KP
cannot	NO_KP
decrypt	NO_KP
the	NO_KP
data	BEGIN_KP
sent	NO_KP
after	NO_KP
its	NO_KP
leaving),	NO_KP
the	NO_KP
data	BEGIN_KP
encryption	INSIDE_KP
key	INSIDE_KP
has	NO_KP
to	NO_KP
be	NO_KP
changed	NO_KP
whenever	NO_KP
a	NO_KP
user	BEGIN_KP
joins	NO_KP
or	NO_KP
leaves	NO_KP
the	NO_KP
system.	NO_KP
such	NO_KP
a	NO_KP
change	NO_KP
has	NO_KP
to	NO_KP
be	NO_KP
made	NO_KP
known	NO_KP
to	NO_KP
all	NO_KP
the	NO_KP
current	NO_KP
users.	NO_KP
the	NO_KP
bandwidth	BEGIN_KP
used	NO_KP
for	NO_KP
such	NO_KP
re-key	BEGIN_KP
messaging	NO_KP
can	NO_KP
be	NO_KP
high	NO_KP
when	NO_KP
the	NO_KP
user	BEGIN_KP
pool	NO_KP
is	NO_KP
large.	NO_KP
we	NO_KP
propose	NO_KP
a	NO_KP
distributed	BEGIN_KP
servers	INSIDE_KP
approach	NO_KP
to	NO_KP
minimize	NO_KP
the	NO_KP
overall	NO_KP
system	BEGIN_KP
bandwidth	INSIDE_KP
(and	NO_KP
complexity)	NO_KP
by	NO_KP
splitting	NO_KP
the	NO_KP
user	BEGIN_KP
pool	NO_KP
into	NO_KP
multiple	NO_KP
groups	NO_KP
each	NO_KP
served	NO_KP
by	NO_KP
a	NO_KP
(logical)	NO_KP
server.	NO_KP
after	NO_KP
presenting	NO_KP
an	NO_KP
analytic	NO_KP
model	NO_KP
for	NO_KP
the	NO_KP
system	BEGIN_KP
based	NO_KP
on	NO_KP
a	NO_KP
hierarchical	BEGIN_KP
key	INSIDE_KP
tree,	NO_KP
we	NO_KP
show	NO_KP
that	NO_KP
there	NO_KP
is	NO_KP
an	NO_KP
optimal	NO_KP
number	NO_KP
of	NO_KP
servers	BEGIN_KP
to	NO_KP
achieve	NO_KP
minimum	NO_KP
system	BEGIN_KP
bandwidth.	NO_KP
as	NO_KP
the	NO_KP
underlying	NO_KP
user	BEGIN_KP
traffic	INSIDE_KP
fluctuates,	NO_KP
we	NO_KP
propose	NO_KP
a	NO_KP
simple	NO_KP
dynamic	BEGIN_KP
scheme	INSIDE_KP
with	NO_KP
low	NO_KP
overhead	NO_KP
where	NO_KP
a	NO_KP
physical	NO_KP
server	NO_KP
adaptively	NO_KP
splits	NO_KP
and	NO_KP
merges	NO_KP
its	NO_KP
traffic	BEGIN_KP
into	NO_KP
multiple	NO_KP
groups	NO_KP
each	NO_KP
served	NO_KP
by	NO_KP
a	NO_KP
logical	NO_KP
server	NO_KP
so	NO_KP
as	NO_KP
to	NO_KP
minimize	NO_KP
its	NO_KP
total	NO_KP
bandwidth.	NO_KP
our	NO_KP
results	NO_KP
show	NO_KP
that	NO_KP
a	NO_KP
distributed	BEGIN_KP
servers	INSIDE_KP
approach	NO_KP
is	NO_KP
able	NO_KP
to	NO_KP
substantially	NO_KP
reduce	NO_KP
the	NO_KP
total	NO_KP
bandwidth	BEGIN_KP
required	NO_KP
as	NO_KP
compared	NO_KP
with	NO_KP
the	NO_KP
traditional	NO_KP
single-server	NO_KP
approach,	NO_KP
especially	NO_KP
for	NO_KP
those	NO_KP
applications	BEGIN_KP
with	NO_KP
a	NO_KP
large	NO_KP
user	BEGIN_KP
pool,	NO_KP
short	BEGIN_KP
holding	INSIDE_KP
time,	NO_KP
and	NO_KP
relatively	NO_KP
low	NO_KP
bandwidth	BEGIN_KP
of	NO_KP
a	NO_KP
data	BEGIN_KP
stream,	NO_KP
as	NO_KP
in	NO_KP
the	NO_KP
internet	BEGIN_KP
stock	INSIDE_KP
quote	INSIDE_KP
applications	INSIDE_KP
