faking	NO_KP
it:	NO_KP
simulating	NO_KP
dependent	BEGIN_KP
types	INSIDE_KP
in	NO_KP
haskell	BEGIN_KP
dependent	INSIDE_KP
types	INSIDE_KP
reflect	NO_KP
the	NO_KP
fact	NO_KP
that	NO_KP
validity	BEGIN_KP
of	NO_KP
data	BEGIN_KP
is	NO_KP
often	NO_KP
a	NO_KP
relative	NO_KP
notion	NO_KP
by	NO_KP
allowing	NO_KP
prior	NO_KP
data	BEGIN_KP
to	NO_KP
affect	NO_KP
the	NO_KP
types	BEGIN_KP
of	NO_KP
subsequent	NO_KP
data.	NO_KP
not	NO_KP
only	NO_KP
does	NO_KP
this	NO_KP
make	NO_KP
for	NO_KP
a	NO_KP
precise	BEGIN_KP
type	INSIDE_KP
system,	NO_KP
but	NO_KP
also	NO_KP
a	NO_KP
highly	NO_KP
generic	NO_KP
one:	NO_KP
both	NO_KP
the	NO_KP
type	BEGIN_KP
and	NO_KP
the	NO_KP
program	NO_KP
for	NO_KP
each	NO_KP
instance	NO_KP
of	NO_KP
a	NO_KP
family	NO_KP
of	NO_KP
operations	NO_KP
can	NO_KP
be	NO_KP
computed	NO_KP
from	NO_KP
the	NO_KP
data	BEGIN_KP
which	NO_KP
codes	NO_KP
for	NO_KP
that	NO_KP
instance.	NO_KP
recent	NO_KP
experimental	NO_KP
extensions	NO_KP
to	NO_KP
the	NO_KP
haskell	BEGIN_KP
type	INSIDE_KP
class	INSIDE_KP
mechanism	INSIDE_KP
give	NO_KP
us	NO_KP
strong	NO_KP
tools	NO_KP
to	NO_KP
relativize	NO_KP
types	BEGIN_KP
to	NO_KP
other	NO_KP
types.	NO_KP
we	NO_KP
may	NO_KP
simulate	NO_KP
some	NO_KP
aspects	NO_KP
of	NO_KP
dependent	BEGIN_KP
typing	INSIDE_KP
by	NO_KP
making	NO_KP
counterfeit	BEGIN_KP
type-level	INSIDE_KP
copies	INSIDE_KP
of	NO_KP
data,	NO_KP
with	NO_KP
type	BEGIN_KP
constructors	INSIDE_KP
simulating	NO_KP
data	BEGIN_KP
constructors	INSIDE_KP
and	NO_KP
type	BEGIN_KP
classes	NO_KP
simulating	NO_KP
datatypes.	NO_KP
this	NO_KP
paper	NO_KP
gives	NO_KP
examples	NO_KP
of	NO_KP
the	NO_KP
technique	NO_KP
and	NO_KP
discusses	NO_KP
its	NO_KP
potential	NO_KP
