the	NO_KP
tattletale	BEGIN_KP
technique	INSIDE_KP
practical	NO_KP
experience	NO_KP
has	NO_KP
taught	NO_KP
many	NO_KP
java	BEGIN_KP
developers	NO_KP
one	NO_KP
thing:	NO_KP
critical	BEGIN_KP
resources	INSIDE_KP
(mutexes,	NO_KP
database	BEGIN_KP
connections,	NO_KP
transactions,	NO_KP
file	BEGIN_KP
handles,	NO_KP
etc.)	NO_KP
require	NO_KP
timely	NO_KP
and	NO_KP
systematic	NO_KP
release.	NO_KP
unfortunately,	NO_KP
java's	NO_KP
garbage	BEGIN_KP
collector	INSIDE_KP
is	NO_KP
not	NO_KP
up	NO_KP
to	NO_KP
that	NO_KP
job.	NO_KP
according	NO_KP
to	NO_KP
the	NO_KP
java	BEGIN_KP
language	NO_KP
specification,	NO_KP
there	NO_KP
are	NO_KP
no	NO_KP
guarantees	NO_KP
when	NO_KP
a	NO_KP
garbage	BEGIN_KP
collector	INSIDE_KP
will	NO_KP
run,	NO_KP
when	NO_KP
it	NO_KP
will	NO_KP
collect	NO_KP
an	NO_KP
object,	NO_KP
or	NO_KP
when	NO_KP
it	NO_KP
will	NO_KP
finalize	NO_KP
an	NO_KP
object	NO_KP
-	NO_KP
if	NO_KP
ever.	NO_KP
even	NO_KP
more	NO_KP
unfortunately,	NO_KP
java's	NO_KP
counterpart	NO_KP
to	NO_KP
the	NO_KP
c++	NO_KP
destructor	NO_KP
(the	NO_KP
finally	NO_KP
block)	NO_KP
is	NO_KP
both	NO_KP
tedious	NO_KP
and	NO_KP
error-prone,	NO_KP
requiring	NO_KP
developers	NO_KP
to	NO_KP
constantly	NO_KP
remember	NO_KP
and	NO_KP
duplicate	NO_KP
resource-releasing	BEGIN_KP
code.	NO_KP
consequently,	NO_KP
even	NO_KP
good	NO_KP
java	BEGIN_KP
developers	NO_KP
can	NO_KP
forget	NO_KP
to	NO_KP
release	NO_KP
critical	BEGIN_KP
resources.	NO_KP
there	NO_KP
is	NO_KP
a	NO_KP
light	NO_KP
at	NO_KP
the	NO_KP
end	NO_KP
of	NO_KP
the	NO_KP
tunnel.	NO_KP
java	BEGIN_KP
may	NO_KP
make	NO_KP
it	NO_KP
easier	NO_KP
to	NO_KP
leak	NO_KP
critical	BEGIN_KP
resources,	NO_KP
but	NO_KP
it	NO_KP
also	NO_KP
provides	NO_KP
the	NO_KP
necessary	NO_KP
mechanisms	NO_KP
to	NO_KP
easily	NO_KP
track	NO_KP
them	NO_KP
down.	NO_KP
the	NO_KP
tattletale	BEGIN_KP
technique	INSIDE_KP
is	NO_KP
a	NO_KP
simple	NO_KP
method	NO_KP
for	NO_KP
designing	NO_KP
new	NO_KP
classes	NO_KP
and	NO_KP
retrofitting	NO_KP
existing	NO_KP
classes	NO_KP
to	NO_KP
quickly	NO_KP
and	NO_KP
easily	NO_KP
detect	NO_KP
the	NO_KP
offending	NO_KP
code	BEGIN_KP
responsible	NO_KP
for	NO_KP
leaking	BEGIN_KP
resources	INSIDE_KP
