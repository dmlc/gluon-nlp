reaching	NO_KP
strong	BEGIN_KP
consensus	INSIDE_KP
in	NO_KP
a	NO_KP
general	NO_KP
network	BEGIN_KP
the	NO_KP
strong	BEGIN_KP
consensus	INSIDE_KP
(sc)	NO_KP
problem	BEGIN_KP
is	NO_KP
a	NO_KP
variant	NO_KP
of	NO_KP
the	NO_KP
conventional	NO_KP
distributed	BEGIN_KP
consensus	INSIDE_KP
problem	INSIDE_KP
(also	NO_KP
known	NO_KP
as	NO_KP
the	NO_KP
byzantine	BEGIN_KP
agreement	NO_KP
problem).	NO_KP
the	NO_KP
sc	NO_KP
problem	BEGIN_KP
requires	NO_KP
that	NO_KP
the	NO_KP
agreed	NO_KP
value	NO_KP
among	NO_KP
fault-free	BEGIN_KP
processors	INSIDE_KP
be	NO_KP
one	NO_KP
of	NO_KP
the	NO_KP
fault-free	BEGIN_KP
processor's	NO_KP
initial	NO_KP
values.	NO_KP
originally,	NO_KP
the	NO_KP
problem	BEGIN_KP
was	NO_KP
studied	NO_KP
in	NO_KP
a	NO_KP
fully	BEGIN_KP
connected	INSIDE_KP
network	INSIDE_KP
with	NO_KP
malicious	NO_KP
faulty	NO_KP
processors.	NO_KP
in	NO_KP
this	NO_KP
paper,	NO_KP
the	NO_KP
sc	NO_KP
problem	BEGIN_KP
is	NO_KP
re-examined	NO_KP
in	NO_KP
a	NO_KP
general	NO_KP
network,	NO_KP
in	NO_KP
which	NO_KP
the	NO_KP
components	NO_KP
(processors	NO_KP
and	NO_KP
communication	NO_KP
links)	NO_KP
may	NO_KP
be	NO_KP
subjected	NO_KP
to	NO_KP
different	NO_KP
faulty	NO_KP
types	NO_KP
simultaneously	NO_KP
(also	NO_KP
called	NO_KP
the	NO_KP
hybrid	BEGIN_KP
fault	INSIDE_KP
model	NO_KP
or	NO_KP
mixed	NO_KP
faulty	NO_KP
types)	NO_KP
and	NO_KP
the	NO_KP
network	BEGIN_KP
topology	NO_KP
does	NO_KP
not	NO_KP
have	NO_KP
to	NO_KP
be	NO_KP
fully	BEGIN_KP
connected.	NO_KP
the	NO_KP
proposed	NO_KP
protocol	NO_KP
can	NO_KP
tolerate	NO_KP
the	NO_KP
maximum	NO_KP
number	NO_KP
of	NO_KP
tolerable	NO_KP
faulty	NO_KP
components	NO_KP
such	NO_KP
that	NO_KP
each	NO_KP
fault-free	BEGIN_KP
processor	NO_KP
obtains	NO_KP
a	NO_KP
common	NO_KP
value	NO_KP
for	NO_KP
the	NO_KP
sc	NO_KP
problem	BEGIN_KP
in	NO_KP
a	NO_KP
general	NO_KP
network	BEGIN_KP
